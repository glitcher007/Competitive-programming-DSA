# Competitive-programming-DSA
class Solution {
public:
    vector<int> shuffle(vector<int>& nums, int n) {
        for(int j=n;j<2*n;j++){
            int secnum=nums[j]<<10;
            nums[j-n]=nums[j-n]|secnum;

        }
        // using O(1)space complexity
        int tenOnes=pow(2,10)-1;
        for(int j=n-1;j>=0;j--){
            int secnum=nums[j]>>10;
            int firstnum=nums[j]&tenOnes;
            nums[2*j+1]=secnum;
            nums[2*j]=firstnum;
        }
        return nums;
    }
};
